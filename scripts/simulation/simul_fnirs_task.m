sFiles = {...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1022.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1024.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1026.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1028.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1030.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1032.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1034.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1036.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1038.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1040.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1042.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1044.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1046.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1048.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1050.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1052.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1054.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1056.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1058.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1060.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1062.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1064.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1066.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1068.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1070.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1072.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1074.mat', ...
    'sub-02/simulation_wake_task_-1.00dB_left_medium/data_sim_250421_1076.mat'};



bst_report('Start', sFiles);

baselinewindow_avg   = [-10 0];
timewindow_avg       = [-10 30];

baselinewindow_full  = [20 40];
timewindow_full      = [20 340];

neighborhood_order   = [ 4, 5, 6, 7, 8];
parpool(4)
for iFile = 1:length(sFiles)

   sImput = sFiles(iFile);

    % Process: Low-pass:0.1Hz
    sFile = bst_process('CallProcess', 'process_bandpass', sImput, [], ...
        'sensortypes', 'nirs', ...
        'highpass',    0, ...
        'lowpass',     0.1, ...
        'tranband',    0.05, ...
        'attenuation', 'relax', ...  % 40dB (relaxed)
        'ver',         '2019', ...  % 2019
        'mirror',      0, ...
        'overwrite',   0);
    
    % Process: Windows Average: [-10.000s,30.000s]
    sFileAvg = bst_process('CallProcess', 'process_windows_average_time', sFile, [], ...
        'Eventname',      'Task', ...
        'timewindow',     timewindow_avg, ...
        'remove_DC',      1, ...
        'baselinewindow', baselinewindow_avg, ...
        'overwrite',      0);


    % Generate the average ground truth 
    [sStudy, iStudy, iResults] = bst_get('ResultsForDataFile', sImput{1});
    ResultFiles = sStudy.Result(iResults);
    

    % Select Ground truth and cMEM
    sMaps = ResultFiles( contains({ResultFiles.Comment}, {'Ground Truth'}));
    bst_process('CallProcess', 'process_windows_average_time', sMaps.FileName, [], ...
            'Eventname',      'Task', ...
            'timewindow',     timewindow_avg, ...
            'remove_DC',      1, ...
            'baselinewindow', baselinewindow_avg, ...
            'new_dataFIle', sFileAvg.FileName, ...
            'overwrite',      0);

    

    for iNBO = 1:length(neighborhood_order)
        compute_cMEM(timewindow_avg, baselinewindow_avg, neighborhood_order(iNBO), sFileAvg);
    end

    % Process: Source reconstruction - wMNE
    bst_process('CallProcess', 'process_nst_wmne', sFileAvg, [], ...
                                                    'thresh_dis2cortex',  5, ...
                                                    'depth_weightingMNE', 0.3, ...
                                                    'TimeSegment',        timewindow_avg, ...
                                                    'NoiseCov_recompute', 1, ...
                                                    'TimeSegmentNoise',   baselinewindow_avg);




   %% Case 2: Localize then average

   compte_MNE(sImput, timewindow_full, baselinewindow_full, timewindow_avg, baselinewindow_avg, sFileAvg);

    for iNBO = 1:length(neighborhood_order)

        selected_scales = [1:9]; alpha_init = 7; normalization = 'fixed';
        compute_wMEM(sImput, timewindow_full, baselinewindow_full, neighborhood_order(iNBO), selected_scales, alpha_init, normalization, timewindow_avg, baselinewindow_avg, sFileAvg);
        
        selected_scales = [1:9]; alpha_init = 7; normalization = 'adaptive';
        compute_wMEM(sImput, timewindow_full, baselinewindow_full, neighborhood_order(iNBO), selected_scales, alpha_init, normalization,  timewindow_avg, baselinewindow_avg, sFileAvg);

    end

end


% Save and display report
ReportFile = bst_report('Save', sFiles);
bst_report('Open', ReportFile);


function compute_wMEM(sImput, timewindow_full, baselinewindow_full, neighborhood_order, selected_scales, alpha_init, normalization, timewindow_avg, baselinewindow_avg, sFileAvg)


    mem_option = be_pipelineoptions([], 'wMEM','NIRS');
    mem_option.optional = struct_copy_fields(mem_option.optional, ...
        struct(...
        'TimeSegment',    timewindow_full, ...
        'BaselineType',    {{'within-data'}}, ...
        'BaselineHistory', {{'within'}}, ...
        "baseline_shuffle", 0, ...
        "BaselineSegment", baselinewindow_full , ...
        'display',         0));

    mem_option.clustering =  struct_copy_fields(mem_option.clustering, ...
        struct( ...
        'neighborhood_order',   neighborhood_order));

    mem_option.wavelet.selected_scales  = selected_scales;
    mem_option.model.alpha_method       = alpha_init;
    mem_option.optional.normalization   = normalization;

    mem_option.solver.parallel_matlab = 1;

    sFilesMEM = bst_process('CallProcess', 'process_nst_cmem', sImput, [], ...
        'mem', struct('MEMpaneloptions', mem_option), ...
        'thresh_dis2cortex',       5, ...
        'NoiseCov_recompute',      1, ...
        'auto_neighborhood_order', 0, ...
        'store_sparse_results',    0);

    sFilesMEM =  bst_process('CallProcess', 'process_add_tag', sFilesMEM, [], ...
        'tag',            sprintf('| nbo = %d | alpha = %d | norm = %s',  neighborhood_order, alpha_init, normalization), ...
        'output',         'name'); 

    % Process: Windows Average: [-10.000s,30.000s]
    
    bst_process('CallProcess', 'process_windows_average_time', sFilesMEM, [], ...
        'Eventname',      'Task', ...
        'timewindow',     timewindow_avg, ...
        'remove_DC',      1, ...
        'baselinewindow', baselinewindow_avg, ...
        'new_dataFIle', sFileAvg.FileName, ...
        'overwrite',      0);


    % Process: Low-pass:0.1Hz
    sFileBP = bst_process('CallProcess', 'process_bandpass', sFilesMEM, [], ...
        'sensortypes', 'nirs', ...
        'highpass',    0, ...
        'lowpass',     0.1, ...
        'tranband',    0.005, ...
        'attenuation', 'relax', ...  % 40dB (relaxed)
        'ver',         '2019', ...  % 2019
        'mirror',      0, ...
        'overwrite',   0);
    
    bst_process('CallProcess', 'process_windows_average_time', sFileBP, [], ...
        'Eventname',      'Task', ...
        'timewindow',     timewindow_avg, ...
        'remove_DC',      1, ...
        'baselinewindow', baselinewindow_avg, ...
        'new_dataFIle', sFileAvg.FileName, ...
        'overwrite',      0);
end

function compte_MNE(sImput, timewindow_full, baselinewindow_full, timewindow_avg, baselinewindow_avg, sFileAvg)

    % Process: Source reconstruction - wMNE
    sFileMNE = bst_process('CallProcess', 'process_nst_wmne', sImput, [], ...
        'thresh_dis2cortex',  5, ...
        'depth_weightingMNE', 0.3, ...
        'TimeSegment',        timewindow_full, ...
        'NoiseCov_recompute', 1, ...
        'TimeSegmentNoise',   baselinewindow_full);
    
    
    
    % Process: Windows Average: [-10.000s,30.000s]
    bst_process('CallProcess', 'process_windows_average_time', sFileMNE, [], ...
        'Eventname',      'Task', ...
        'timewindow',     timewindow_avg, ...
        'remove_DC',      1, ...
        'baselinewindow', baselinewindow_avg, ...
        'new_dataFIle', sFileAvg.FileName, ...
        'overwrite',      0);
    
    
    % Process: Low-pass:0.1Hz
    sFileBP = bst_process('CallProcess', 'process_bandpass', sFileMNE, [], ...
        'sensortypes', 'nirs', ...
        'highpass',    0, ...
        'lowpass',     0.1, ...
        'tranband',    0.05, ...
        'attenuation', 'relax', ...  % 40dB (relaxed)
        'ver',         '2019', ...  % 2019
        'mirror',      0, ...
        'overwrite',   0);
    
    bst_process('CallProcess', 'process_windows_average_time', sFileBP, [], ...
        'Eventname',      'Task', ...
        'timewindow',     timewindow_avg, ...
        'remove_DC',      1, ...
        'baselinewindow', baselinewindow_avg, ...
        'new_dataFIle', sFileAvg.FileName, ...
        'overwrite',      0);
end

function compute_cMEM(timewindow_avg, baselinewindow_avg, neighborhood_order, sFileAvg)
    mem_option = be_pipelineoptions([], 'cMEM', 'NIRS');
    
    mem_option.optional = struct_copy_fields(mem_option.optional, ...
        struct(...
        'TimeSegment',     timewindow_avg, ...
        'BaselineType',    {{'within-data'}}, ...
        'BaselineSegment', baselinewindow_avg, ...
        'display',         0));
    
    
    mem_option.clustering =  struct_copy_fields(mem_option.clustering, ...
        struct( ...
        'neighborhood_order',   neighborhood_order));
    
    mem_option.solver.parallel_matlab = 1;

    sFileMEM = bst_process('CallProcess', 'process_nst_cmem', sFileAvg, [], ...
        'mem', struct('MEMpaneloptions', mem_option), ...
        'thresh_dis2cortex',       5, ...
        'NoiseCov_recompute',      1, ...
        'auto_neighborhood_order', 0, ...
        'store_sparse_results',    0);
    
    
    bst_process('CallProcess', 'process_add_tag', sFileMEM, [], ...
        'tag',            sprintf('| nbo = %d',  neighborhood_order), ...
        'output',         'name'); 
end